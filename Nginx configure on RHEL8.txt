--install this 2 nodes
192.168.161.130
192.168.161.129

--repo add
yum install epel-release

--package install
yum update
yum install nginx

--once install go to that
cd /etc/nginx/
ll

--Ubuntu and Debian follow a rule for storing virtual host files in /etc/nginx/sites-available/, 
    which are enabled through symbolic links to /etc/nginx/sites-enabled/. You can use the command below to enable any new virtual 
    host files.
# sudo ln -s /etc/nginx/sites-available/vhost /etc/nginx/sites-enabled/vhost

--CentOS users can find their host configuration files under /etc/nginx/conf.d/ in which any .conf type virtual host file gets loaded.
cd /etc/nginx/conf.d/

systemctl stop firewalld.service
systemctl disable firewalld.service
--for restart
systemctl restart nginx

--default log location
cd /var/log/nginx/
--nginx default files are here
cd /usr/share/nginx/html

firewall-cmd --add-service=http --permanent
firewall-cmd --reload

-----Configuring nginx as web server-----
--on 192.168.161.130
#vi /etc/nginx/conf.d/web.conf
server {
    
    listen       9001;
    index  index.html;
    add_header Custom-Header "Application 1";
   
    location / {
    root   /opt/APP1/html;

    }
}

server {
    
    listen       9002;
    index  index.html;
    add_header Custom-Header "Application 2";

    location / {
    root   /opt/APP2/html;
    }
}

--on 192.168.161.129
#vi /etc/nginx/conf.d/web.conf
server {
    
    listen       9001;
    index  index.html;
    add_header Custom-Header "Application 1";
   
    location / {
    root   /opt/APP1/html;

    }
}

server {
    
    listen       9002;
    index  index.html;
    add_header Custom-Header "Application 2";

    location / {
    root   /opt/APP2/html;
    }
}

-----Configuring nginx as load balancer-----
--on 192.168.161.130
#vi /etc/nginx/conf.d/lb.conf
upstream backend_servers {

    #hash $request_uri;
    #ip_hash;
    #least_conn;
    zone backend_server_zone 64k;
    server 192.168.161.130:9001;
    server 192.168.161.130:9002;
    server 192.168.161.129:9001;
    server 192.168.161.129:9002;
    #sticky cookie lb_example expires=1h;
}

server {
    listen 80;
    server_name  192.168.161.130;
    
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP  $remote_addr;

    location / {
    proxy_pass http://backend_servers/;

    }
}


--On Debian and Ubuntu systems you’ll need to remove the default symbolic link from the sites-enabled folder.
sudo rm /etc/nginx/sites-enabled/default

--CentOS hosts don’t use the same linking. Instead, simply rename the default.conf in the conf.d/ directory to something that doesn’t 
end with .conf, for example:
# mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.disabled

--Then use the following to restart nginx.
systemctl restart nginx

